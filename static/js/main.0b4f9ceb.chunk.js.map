{"version":3,"sources":["components/Person.js","components/Group.js","lib/initState.js","App.js","serviceWorker.js","index.js"],"names":["Person","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","render","react_default","a","createElement","className","style","props","divStyle","name","grp","inherits","Component","Group","hue","color","backgroundColor","persons","map","person","Person_Person","key","groupName","getFinalHash","timestamp","personName","hexHash","hash","algorithm","encoding","sortHash","toBeSorted","sort","b","initState","parsed","queryString","parse","document","location","search","keys","personKeys","filter","slice","groupNameKeys","groupingPolicyKeys","groupNames","groupingPolicies","groups","policy","i","n","ng","np","counterG","counterP","grouping","currentGroup","push","sha1","Math","random","toUpperCase","parseInt","calGrouping","split","getTimestamp","timeString","currentDate","timeStringM","moment","utc","locale","tDate","format","isValid","App","state","hueStart","floor","inputValue","componentWillMount","setState","generateHue","max","min","group","idx","objectSpread","handleSubmit","evt","preventDefault","generateNewResult","newTimestamp","toString","handleInputChange","value","target","groupingWithHue","onSubmit","id","type","onChange","placeholder","Group_Group","href","Boolean","window","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b4f9ceb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Person extends Component {\n  render = () => {\n    return (\n      <div className=\"person\" style={this.props.divStyle}>\n        <h2>{this.props.name}</h2>\n        <p>{this.props.grp}</p>\n      </div>\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport { Person } from \"./Person\";\n\nexport class Group extends Component {\n  render = () => {\n    const hue = this.props.hue;\n    const divStyle = {\n      color: `hsl(${hue}, 25%, 25%)`,\n      backgroundColor: `hsl(${hue}, 100%, 97%)`\n    };\n\n    return (\n      <div className=\"group\">\n        {this.props.persons.map(person => (\n          <Person\n            key={person}\n            name={person}\n            grp={this.props.groupName}\n            divStyle={divStyle}\n          />\n        ))}\n      </div>\n    );\n  };\n}\n","import hash from \"object-hash\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\n\nconst queryParser = () => {\n  const parsed = queryString.parse(document.location.search);\n  return parsed;\n};\n\nconst getFinalHash = (timestamp, personName) => {\n  let hexHash = hash(`${timestamp}-${personName}`, {\n    algorithm: \"sha1\",\n    encoding: \"hex\"\n  });\n  hexHash = hash(hexHash, { algorithm: \"sha1\", encoding: \"hex\" });\n  return hexHash;\n};\n\nconst sortHash = (toBeSorted, timestamp) => {\n  return toBeSorted.sort((a, b) => {\n    return getFinalHash(timestamp, a) < getFinalHash(timestamp, b) ? -1 : 1;\n  });\n};\n\nconst calGrouping = (persons, groups, policy) => {\n  const n = persons.length;\n  const ng = groups.length;\n  const np = policy.length;\n\n  let counterG = 0;\n  let counterP = 0;\n  let grouping = [];\n  let currentGroup = {\n    groupName: \"\",\n    persons: []\n  };\n  let i;\n  for (i = 0; i < n; i++) {\n    currentGroup.persons.push(persons[i]);\n    if (currentGroup.groupName === \"\") {\n      currentGroup.groupName =\n        counterG < ng\n          ? groups[counterG] || \" \"\n          : `Unnamed Group ${hash\n              .sha1(Math.random())\n              .slice(0, 6)\n              .toUpperCase()}`;\n      counterG += 1;\n    }\n    if (\n      counterP < np &&\n      currentGroup.persons.length >= parseInt(policy[counterP])\n    ) {\n      currentGroup.persons = currentGroup.persons.sort((a, b) => {\n        return a < b ? -1 : 1;\n      });\n      grouping.push(currentGroup);\n      currentGroup = {\n        groupName: \"\",\n        persons: []\n      };\n      counterP += 1;\n    }\n  }\n  if (currentGroup.groupName !== \"\") {\n    currentGroup.persons = currentGroup.persons.sort((a, b) => {\n      return a < b ? -1 : 1;\n    });\n    grouping.push(currentGroup);\n  }\n\n  return grouping.sort((a, b) => {\n    return a.groupName < b.groupName ? -1 : 1;\n  });\n};\n\nexport const initState = timestamp => {\n  const parsed = queryParser();\n  const keys = Object.keys(parsed);\n  const personKeys = keys.filter(key => key.slice(0, 1) === \"p\");\n  const groupNameKeys = keys.filter(key => key.slice(0, 1) === \"n\");\n  const groupingPolicyKeys = keys.filter(key => key.slice(0, 1) === \"g\");\n\n  let persons = personKeys.map(key => {\n    return parsed[key];\n  });\n  if (persons.length === 0) {\n    persons = [\"小明\", \"小王\", \"小李\", \"小张\", \"小文\", \"小谢\", \"小郑\", \"小林\"];\n  }\n  let groupNames = groupNameKeys.map(key => {\n    return parsed[key];\n  });\n  if (groupNames.length === 0) {\n    groupNames = [\"工作区-1\", \"工作区-2\"];\n  }\n  let groupingPolicies = groupingPolicyKeys.map(key => {\n    return parsed[key];\n  });\n  if (groupingPolicies.length === 0) {\n    groupingPolicies = [\"4-4\"];\n  }\n\n  const sortedPersons = sortHash(persons, timestamp);\n  const sortedGroupNames = groupNames.sort();\n  const selectedGroupingPolicy = sortHash(groupingPolicies, timestamp)[0];\n\n  const parsePolicy = selectedGroupingPolicy.split(\"-\");\n\n  const result = calGrouping(sortedPersons, sortedGroupNames, parsePolicy);\n\n  return result;\n};\n\nexport const getTimestamp = timeString => {\n  let currentDate;\n  if (timeString) {\n    let timeStringM = `${timeString.slice(0, 4)}-${timeString.slice(\n      4,\n      6\n    )}-${timeString.slice(6)}`;\n\n    currentDate = moment(`${timeStringM} 16:56 +00:00`, \"YYYY-MM-DD HH:mm Z\")\n      .utc()\n      .locale(\"en\");\n  } else {\n    const tDate = moment().format(\"YYYY-MM-DD\");\n\n    currentDate = moment(`${tDate} 16:56 +00:00`, \"YYYY-MM-DD HH:mm Z\")\n      .utc()\n      .locale(\"en\");\n  }\n  if (!currentDate.isValid()) {\n    return \"ERROR: INVALID DATE\";\n  }\n  const formattedDate = currentDate.format(\"YYYY-MM-DD\");\n  return formattedDate;\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport \"moment/locale/zh-cn\";\nimport { Group } from \"./components/Group\";\nimport { initState, getTimestamp } from \"./lib/initState\";\n\nclass App extends Component {\n  state = {\n    grouping: [],\n    hueStart: Math.floor(Math.random() * 360),\n    timestamp: getTimestamp(),\n    inputValue: \"\"\n  };\n  componentWillMount = () => {\n    this.setState({ grouping: initState(this.state.timestamp) });\n  };\n  generateHue = () => {\n    let n = Math.max(this.state.grouping.length, 2);\n    n = Math.min(n, 6);\n    const groupingWithHue = this.state.grouping.map((group, idx) => ({\n      ...group,\n      hue: (this.state.hueStart + (idx * 360) / (n + 0.5)) % 360\n    }));\n    return groupingWithHue;\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.generateNewResult();\n  };\n\n  generateNewResult = () => {\n    const newTimestamp = getTimestamp(this.state.inputValue.toString());\n    this.setState({\n      timestamp: newTimestamp,\n      grouping: initState(newTimestamp)\n    });\n  };\n\n  handleInputChange = evt => {\n    const value = evt.target.value;\n    this.setState({ inputValue: value }, () => {\n      if (value.length === 8) {\n        this.generateNewResult();\n      }\n    });\n  };\n\n  render = () => {\n    const groupingWithHue = this.generateHue();\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>RandShift随机分组工具</h1>\n          <p>一个按照日期和姓名对人员进行随机分组的工具</p>\n          <form className=\"input-form\" onSubmit={this.handleSubmit}>\n            <span>输入待查询的日期:</span>\n            <br />\n            <input\n              id=\"input-date\"\n              type=\"number\"\n              onChange={this.handleInputChange}\n              placeholder=\"格式：20181130\"\n              value={this.state.inputValue}\n            />\n          </form>\n          {this.state.timestamp === \"ERROR: INVALID DATE\" ? (\n            <br />\n          ) : (\n            <p className=\"date\">\n              实际查询日期：\n              <br />\n              {moment(\n                `${this.state.timestamp}  16:56 +00:00`,\n                \"YYYY-MM-DD HH:mm Z\"\n              )\n                .utc()\n                .locale(\"zh-cn\")\n                .format(\"LL\")}\n            </p>\n          )}\n        </header>\n        {this.state.timestamp === \"ERROR: INVALID DATE\" ? (\n          <p>日期错误！</p>\n        ) : (\n          <div>\n            {groupingWithHue.map(group => (\n              <Group\n                key={group.groupName}\n                groupName={group.groupName}\n                persons={group.persons}\n                hue={group.hue}\n              />\n            ))}\n          </div>\n        )}\n        <footer>\n          <p>\n            <a href=\"https://github.com/scanthony/RandShift\">\n              在GitHub查看本项目的开源代码。\n            </a>\n          </p>\n        </footer>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}